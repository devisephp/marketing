{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_object-gopd.js","webpack:///./node_modules/vue-feather-icons/icons/CheckSquareIcon.js","webpack:///./node_modules/vue-feather-icons/icons/ClipboardIcon.js","webpack:///./src/components/Smoke.vue?9a13","webpack:///src/components/Smoke.vue","webpack:///./src/components/Smoke.vue?6d08","webpack:///./src/components/Smoke.vue","webpack:///./node_modules/core-js/modules/_inherit-if-required.js","webpack:///./node_modules/tinycolor2/tinycolor.js","webpack:///./node_modules/core-js/modules/_set-proto.js","webpack:///./node_modules/vue-feather-icons/icons/Link2Icon.js","webpack:///./node_modules/core-js/modules/_object-gopn.js","webpack:///./node_modules/babel-helper-vue-jsx-merge-props/index.js","webpack:///./node_modules/vue-feather-icons/icons/TypeIcon.js","webpack:///./node_modules/core-js/modules/_string-trim.js","webpack:///./src/components/ColorSwapper.vue?3a73","webpack:///src/components/ColorSwapper.vue","webpack:///./src/components/ColorSwapper.vue?f2ea","webpack:///./src/components/ColorSwapper.vue","webpack:///./node_modules/core-js/modules/es6.number.constructor.js","webpack:///./node_modules/vue-feather-icons/icons/FileIcon.js","webpack:///./node_modules/vue-feather-icons/icons/ClockIcon.js","webpack:///./node_modules/@bijection/smoke/smoke.js","webpack:///./node_modules/vue-feather-icons/icons/HashIcon.js","webpack:///./node_modules/vue-feather-icons/icons/ImageIcon.js","webpack:///./node_modules/vue-feather-icons/icons/DropletIcon.js","webpack:///./node_modules/core-js/modules/_string-ws.js"],"names":["pIE","__webpack_require__","createDesc","toIObject","toPrimitive","has","IE8_DOM_DEFINE","gOPD","Object","getOwnPropertyDescriptor","exports","f","O","P","e","call","r","__webpack_exports__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0__","babel_helper_vue_jsx_merge_props__WEBPACK_IMPORTED_MODULE_0___default","n","name","functional","render","h","ctx","attrs","xmlns","width","height","viewBox","fill","stroke","stroke-width","stroke-linecap","stroke-linejoin","class","data","points","d","x","y","rx","ry","_vm","this","_h","$createElement","_c","_self","ref","staticClass","staticRenderFns","tinycolor","Smokevue_type_script_lang_js_","props","color","required","type","String","generators","default","Number","animationLoop","canvas","mounted","$refs","smokeCanvas","getContext","setCanvasSize","startParty","methods","$el","offsetHeight","offsetWidth","_this","rgbColor","toRgb","party","smoke_default","g","b","start","setInterval","stop","i","xRatio","addSmoke","_i","step","setTimeout","watch","clearInterval","components_Smokevue_type_script_lang_js_","component","componentNormalizer","isObject","setPrototypeOf","set","module","that","target","C","S","constructor","prototype","__WEBPACK_AMD_DEFINE_RESULT__","Math","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","opts","rgb","inputToRGB","_originalInput","_r","_g","_b","_a","a","_roundA","_format","format","_gradientType","gradientType","_ok","ok","_tc_id","s","v","l","stringInputToObject","isValidCSSUnit","rgbToRgb","substr","convertToPercentage","hsvToRgb","hslToRgb","hasOwnProperty","boundAlpha","bound01","rgbToHsl","hue2rgb","p","q","t","rgbToHsv","floor","mod","rgbToHex","allow3Char","hex","pad2","toString","charAt","join","rgbaToHex","allow4Char","convertDecimalToHex","rgbaToArgbHex","desaturate","amount","hsl","toHsl","clamp01","saturate","greyscale","lighten","brighten","darken","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","push","monochromatic","hsv","toHsv","modification","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","toHsvString","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","arguments","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","isNaN","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","match","named","parms","toUpperCase","undefined","anObject","check","proto","TypeError","test","buggy","Function","Array","__proto__","x1","y1","x2","y2","$keys","hiddenKeys","getOwnPropertyNames","nestRE","mergeFn","objs","reduce","aa","bb","key","nestedKey","temp","isArray","$export","defined","fails","spaces","space","non","ltrim","rtrim","exporter","KEY","ALIAS","exp","FORCE","trim","F","string","TYPE","staticStyle","transition","style","backgroundColor","_v","_s","devise","title","text","domProps","innerHTML","copy","circleSize","on","click","$event","ColorSwappervue_type_script_lang_js_","computed","components_ColorSwappervue_type_script_lang_js_","global","cof","inheritIfRequired","gOPN","dP","$trim","NUMBER","$Number","Base","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","valueOf","keys","split","j","cx","cy","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","root","factory","self","opacities","smokeSpriteSize","polyfillAnimFrame","window","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","floatInRange","end","makeSmokeSprite","smokeSprite","document","createElement","createImageData","putImageData","createParticle","options","lifetime","particle","vx","minVx","maxVx","startvy","minVy","maxVy","scale","minScale","maxScale","minLifetime","maxLifetime","age","finalScale","vy","updateParticle","deltatime","frac","sqrt","drawParticle","smokeParticleImage","context","globalAlpha","off","xmin","xmax","ymin","ymax","drawImage","particles","preDrawCallback","updateAndDrawParticles","clearRect","forEach","filter","running","lastframe","performance","now","frame","time","dt","addParticles","numParticles","console","log","setPreDrawCallback","addsmoke"],"mappings":"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","file":"js/app-ui.js","sourcesContent":["var pIE = require('./_object-pie');\nvar createDesc = require('./_property-desc');\nvar toIObject = require('./_to-iobject');\nvar toPrimitive = require('./_to-primitive');\nvar has = require('./_has');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nexports.f = require('./_descriptors') ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) { /* empty */ }\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'CheckSquareIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-check-square\"\n    }, ctx.data]), [h(\"polyline\", {\n      attrs: {\n        points: \"9 11 12 14 22 4\"\n      }\n    }), h(\"path\", {\n      attrs: {\n        d: \"M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11\"\n      }\n    })]);\n  }\n};","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'ClipboardIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-clipboard\"\n    }, ctx.data]), [h(\"path\", {\n      attrs: {\n        d: \"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2\"\n      }\n    }), h(\"rect\", {\n      attrs: {\n        x: \"8\",\n        y: \"2\",\n        width: \"8\",\n        height: \"4\",\n        rx: \"1\",\n        ry: \"1\"\n      }\n    })]);\n  }\n};","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{ref:\"smokeCanvas\",staticClass:\"absolute pin\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <canvas\n      ref=\"smokeCanvas\"\n      class=\"absolute pin\"\n    ></canvas>\n  </div>\n</template>\n\n<script>\nimport SmokeMachine from '@bijection/smoke';\n\nconst tinycolor = require('tinycolor2');\n\nexport default {\n  name: 'Smoke',\n  props: {\n    color: {\n      required: true,\n      type: String,\n    },\n    generators: {\n      default: 2,\n      type: Number,\n    },\n  },\n  data() {\n    return {\n      animationLoop: null,\n      canvas: null,\n      ctx: null,\n      height: 0,\n      width: 0,\n    };\n  },\n  mounted() {\n    this.canvas = this.$refs.smokeCanvas;\n    this.ctx = this.canvas.getContext('2d');\n\n    this.setCanvasSize();\n    this.startParty();\n  },\n  methods: {\n    setCanvasSize() {\n      const height = this.$el.offsetHeight;\n      const width = this.$el.offsetWidth;\n      this.canvas.height = height;\n      this.canvas.width = width;\n      this.height = height;\n      this.width = width;\n    },\n    startParty() {\n      const color = tinycolor(this.color);\n      const rgbColor = color.toRgb();\n      const party = SmokeMachine(this.ctx, [rgbColor.r, rgbColor.g, rgbColor.b]);\n\n      party.start(); // start animating\n\n      this.animationLoop = setInterval(() => {\n        party.stop();\n\n        for (let i = 0; i < this.generators; i += 1) {\n          const xRatio = i / this.generators;\n          party.addSmoke(this.width * xRatio, this.height * 2, 50);\n        }\n\n        for (let i = 0; i < 10; i += 1) {\n          party.step(10); // pretend 10 ms pass and rerender\n        }\n\n        setTimeout(() => {\n          party.start();\n        }, 1000);\n      }, 1000);\n    },\n  },\n  watch: {\n    color() {\n      clearInterval(this.animationLoop);\n      this.startParty();\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-service/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Smoke.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-service/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Smoke.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Smoke.vue?vue&type=template&id=61209a4b&\"\nimport script from \"./Smoke.vue?vue&type=script&lang=js&\"\nexport * from \"./Smoke.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var isObject = require('./_is-object');\nvar setPrototypeOf = require('./_set-proto').set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  } return that;\n};\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'Link2Icon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-link-2\"\n    }, ctx.data]), [h(\"path\", {\n      attrs: {\n        d: \"M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3\"\n      }\n    }), h(\"line\", {\n      attrs: {\n        x1: \"8\",\n        y1: \"12\",\n        x2: \"16\",\n        y2: \"12\"\n      }\n    })]);\n  }\n};","// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)\nvar $keys = require('./_object-keys-internal');\nvar hiddenKeys = require('./_enum-bug-keys').concat('length', 'prototype');\n\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n","var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/\n\nmodule.exports = function mergeJSXProps (objs) {\n  return objs.reduce(function (a, b) {\n    var aa, bb, key, nestedKey, temp\n    for (key in b) {\n      aa = a[key]\n      bb = b[key]\n      if (aa && nestRE.test(key)) {\n        // normalize class\n        if (key === 'class') {\n          if (typeof aa === 'string') {\n            temp = aa\n            a[key] = aa = {}\n            aa[temp] = true\n          }\n          if (typeof bb === 'string') {\n            temp = bb\n            b[key] = bb = {}\n            bb[temp] = true\n          }\n        }\n        if (key === 'on' || key === 'nativeOn' || key === 'hook') {\n          // merge functions\n          for (nestedKey in bb) {\n            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey])\n          }\n        } else if (Array.isArray(aa)) {\n          a[key] = aa.concat(bb)\n        } else if (Array.isArray(bb)) {\n          a[key] = [aa].concat(bb)\n        } else {\n          for (nestedKey in bb) {\n            aa[nestedKey] = bb[nestedKey]\n          }\n        }\n      } else {\n        a[key] = b[key]\n      }\n    }\n    return a\n  }, {})\n}\n\nfunction mergeFn (a, b) {\n  return function () {\n    a && a.apply(this, arguments)\n    b && b.apply(this, arguments)\n  }\n}\n","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'TypeIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-type\"\n    }, ctx.data]), [h(\"polyline\", {\n      attrs: {\n        points: \"4 7 4 4 20 4 20 7\"\n      }\n    }), h(\"line\", {\n      attrs: {\n        x1: \"9\",\n        y1: \"20\",\n        x2: \"15\",\n        y2: \"20\"\n      }\n    }), h(\"line\", {\n      attrs: {\n        x1: \"12\",\n        y1: \"4\",\n        x2: \"12\",\n        y2: \"20\"\n      }\n    })]);\n  }\n};","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flex justify-center p-16\",staticStyle:{\"transition\":\"all 1s\"},style:({backgroundColor: _vm.backgroundColor})},[_c('div',{staticClass:\"container mt-8 mb-8 md:mb-12 w-full flex flex-col md:flex-row items-center\"},[_c('div',{staticClass:\"w-1/2 px-10\"},[_c('h2',{staticClass:\"font-display mb-8\"},[_vm._v(_vm._s(_vm.devise.title.text))]),_c('div',{staticClass:\"leading-loose\",domProps:{\"innerHTML\":_vm._s(_vm.devise.copy.text)}})]),_c('div',{staticClass:\"w-1/2 text-center\"},[_c('h3',{staticClass:\"mb-4\"},[_vm._v(\"What is a slice?\")]),_c('p',{staticClass:\"mb-10 leading-normal font-sans\"},[_vm._v(\"\\n        Oh... well, this whole \"+_vm._s(_vm.color)+\" area is a slice. This is actually a\\n        VueJS component that is also controlled by the database. Try clicking\\n        one of the circles below and see what happens. Here you go.\\n      \")]),_c('div',{staticClass:\"flex justify-center\"},[_c('div',{staticClass:\"rounded-full bg-pink cursor-pointer mx-4\",style:({\n          width: _vm.devise.circleSize.text + 'px',\n          height: _vm.devise.circleSize.text + 'px',\n        }),on:{\"click\":function($event){_vm.color = 'pink'}}}),_c('div',{staticClass:\"rounded-full bg-blue cursor-pointer mx-4\",style:({\n          width: _vm.devise.circleSize.text + 'px',\n          height: _vm.devise.circleSize.text + 'px',\n        }),on:{\"click\":function($event){_vm.color = 'blue'}}}),_c('div',{staticClass:\"rounded-full bg-orange cursor-pointer mx-4\",style:({\n          width: _vm.devise.circleSize.text + 'px',\n          height: _vm.devise.circleSize.text + 'px',\n        }),on:{\"click\":function($event){_vm.color = 'orange'}}})])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div\n    class=\"flex justify-center p-16\"\n    style=\"transition: all 1s;\"\n    :style=\"{backgroundColor: backgroundColor}\"\n  >\n    <div class=\"container mt-8 mb-8 md:mb-12 w-full flex flex-col md:flex-row items-center\">\n      <div class=\"w-1/2 px-10\">\n        <h2 class=\"font-display mb-8\">{{ devise.title.text }}</h2>\n        <div\n          class=\"leading-loose\"\n          v-html=\"devise.copy.text\"\n        ></div>\n      </div>\n      <div class=\"w-1/2 text-center\">\n        <h3 class=\"mb-4\">What is a slice?</h3>\n        <p class=\"mb-10 leading-normal font-sans\">\n          Oh... well, this whole {{ color }} area is a slice. This is actually a\n          VueJS component that is also controlled by the database. Try clicking\n          one of the circles below and see what happens. Here you go.\n        </p>\n        <div class=\"flex justify-center\">\n          <div\n            class=\"rounded-full bg-pink cursor-pointer mx-4\"\n            @click=\"color = 'pink'\"\n            :style=\"{\n            width: devise.circleSize.text + 'px',\n            height: devise.circleSize.text + 'px',\n          }\"\n          ></div>\n          <div\n            class=\"rounded-full bg-blue cursor-pointer mx-4\"\n            @click=\"color = 'blue'\"\n            :style=\"{\n            width: devise.circleSize.text + 'px',\n            height: devise.circleSize.text + 'px',\n          }\"\n          ></div>\n          <div\n            class=\"rounded-full bg-orange cursor-pointer mx-4\"\n            @click=\"color = 'orange'\"\n            :style=\"{\n            width: devise.circleSize.text + 'px',\n            height: devise.circleSize.text + 'px',\n          }\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      color: 'pink',\n    };\n  },\n  computed: {\n    backgroundColor() {\n      if (this.color === 'pink') {\n        return '#ffbbca';\n      } if (this.color === 'blue') {\n        return '#6cb2eb';\n      }\n      return '#fcd9b6';\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-service/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorSwapper.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/@vue/cli-service/node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./ColorSwapper.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ColorSwapper.vue?vue&type=template&id=b36c4b80&\"\nimport script from \"./ColorSwapper.vue?vue&type=script&lang=js&\"\nexport * from \"./ColorSwapper.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'FileIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-file\"\n    }, ctx.data]), [h(\"path\", {\n      attrs: {\n        d: \"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"\n      }\n    }), h(\"polyline\", {\n      attrs: {\n        points: \"13 2 13 9 20 9\"\n      }\n    })]);\n  }\n};","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'ClockIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-clock\"\n    }, ctx.data]), [h(\"circle\", {\n      attrs: {\n        cx: \"12\",\n        cy: \"12\",\n        r: \"10\"\n      }\n    }), h(\"polyline\", {\n      attrs: {\n        points: \"12 6 12 12 16 14\"\n      }\n    })]);\n  }\n};","/*   Magic UMD boilerplate Beginning  */\n/**/ (function (root, factory) {\n/**/     if (typeof define === 'function' && define.amd) {\n/**/         define([], factory);\n/**/     } else if (typeof module === 'object' && module.exports) {\n/**/         module.exports = factory();\n/**/         module.exports.default = module.exports\n/**/     } else {\n/**/         root.smokemachine = root.SmokeMachine = factory();\n/**/   }\n/**/ }(typeof self !== 'undefined' ? self : this, function () {\n\n\n\nvar opacities = [0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,3,5,5,7,4,4,1,1,0,1,0,0,0,0,0,1,0,0,17,27,41,52,56,34,23,15,11,4,9,5,1,0,0,0,0,0,0,1,45,63,57,45,78,66,52,41,34,37,23,20,0,1,0,0,0,0,1,43,62,66,64,67,115,112,114,56,58,47,33,18,12,10,0,0,0,0,39,50,63,76,87,107,105,112,128,104,69,64,29,18,21,15,0,0,0,7,42,52,85,91,103,126,153,128,124,82,57,52,52,24,1,0,0,0,2,17,41,67,84,100,122,136,159,127,78,69,60,50,47,25,7,1,0,0,0,34,33,66,82,113,138,149,168,175,82,142,133,70,62,41,25,6,0,0,0,18,39,55,113,111,137,141,139,141,128,102,130,90,96,65,37,0,0,0,2,15,27,71,104,129,129,158,140,154,146,150,131,92,100,67,26,3,0,0,0,0,46,73,104,124,145,135,122,107,120,122,101,98,96,35,38,7,2,0,0,0,50,58,91,124,127,139,118,121,177,156,88,90,88,28,43,3,0,0,0,0,30,62,68,91,83,117,89,139,139,99,105,77,32,1,1,0,0,0,0,0,16,21,8,45,101,125,118,87,110,86,64,39,0,0,0,0,0,0,0,0,0,1,28,79,79,117,122,88,84,54,46,11,0,0,0,0,0,0,0,0,0,1,0,6,55,61,68,71,30,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,23,25,20,12,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,12,9,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,2,2,0,0,0,0,0,0,0,0]\nvar smokeSpriteSize = 20\n\nvar polyfillAnimFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n    window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\nfunction floatInRange(start, end){\n    return start + Math.random()*(end - start)\n}\n\nfunction makeSmokeSprite(color){\n    color = color || [24, 46.8, 48.2]\n    var smokeSprite = document.createElement('canvas'),\n        ctx = smokeSprite.getContext('2d'),\n        data = ctx.createImageData(smokeSpriteSize, smokeSpriteSize),\n        d = data.data\n\n    for(var i=0;i<d.length;i+=4){\n        d[i]=color[0]\n        d[i+1]=color[1]\n        d[i+2]=color[2]\n        d[i+3]=opacities[i / 4]\n    }\n\n    smokeSprite.width = smokeSpriteSize\n    smokeSprite.height = smokeSpriteSize\n\n    ctx.putImageData(data,0,0)\n\n    return smokeSprite\n}\n\nfunction createParticle(x,y,options){\n    options = options || {}\n    var lifetime = options.lifetime || 4000\n    var particle = {\n        x: x,\n        y: y,\n        vx: floatInRange(options.minVx || -4/100, options.maxVx || 4/100),\n        startvy: floatInRange(options.minVy || -4/10, options.maxVy || -1/10),\n        scale: floatInRange(options.minScale || 0, options.maxScale || 0.5),\n        lifetime: floatInRange(options.minLifetime || 2000, options.maxLifetime || 8000),\n        age: 0,\n    }\n    particle.finalScale = floatInRange(\n        options.minScale || 25+particle.scale,\n        options.maxScale || 30+particle.scale\n    )\n    particle.vy = particle.startvy\n    return particle\n}\n\nfunction updateParticle(particle, deltatime){\n    particle.x += particle.vx * deltatime\n    particle.y += particle.vy * deltatime\n    var frac = Math.sqrt(particle.age / particle.lifetime)\n    particle.vy = (1-frac)*particle.startvy\n    particle.age+=deltatime\n    particle.scale=frac*particle.finalScale\n}\n\nfunction drawParticle(particle, smokeParticleImage, context){\n    context.globalAlpha = (1-Math.abs(1-2*particle.age/particle.lifetime))/8\n    var off = particle.scale*smokeSpriteSize/2\n    var xmin = particle.x - off\n    var xmax = xmin + off*2\n    var ymin = particle.y - off\n    var ymax = ymin + off*2\n    context.drawImage(smokeParticleImage, xmin, ymin, xmax-xmin, ymax-ymin)\n    // console.log(smokeParticleImage, xmin, ymin, xmax-xmin, ymax-ymin)\n}\n\n\nreturn function SmokeMachine(context, color){\n    var smokeParticleImage = makeSmokeSprite(color),\n        particles = [],\n        preDrawCallback=function(){}\n\n    function updateAndDrawParticles(deltatime){\n        context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n        particles.forEach(function(p){ updateParticle(p, deltatime) })\n        particles = particles.filter(function(p){ return p.age < p.lifetime })\n\n        preDrawCallback(deltatime, particles)\n        particles.forEach(function(p){ drawParticle(p, smokeParticleImage, context) })\n    }\n\n    var running = false, lastframe = performance.now()\n    function frame(time){\n        if(!running) return\n        var dt = time-lastframe\n        lastframe = time;\n\n        updateAndDrawParticles(dt)\n        polyfillAnimFrame(frame)\n    }\n\n    function addParticles(x,y,numParticles,options){\n        numParticles = numParticles || 10\n        if(numParticles < 1) return Math.random() <= numParticles && particles.push(createParticle(x,y,options));\n        for (var i = 0; i < numParticles; i++) particles.push(createParticle(x,y,options))\n    }\n\n    return {\n        step: function step(dt){\n            dt = dt || 16\n            console.log(dt)\n            updateAndDrawParticles(dt)\n        },\n        start: function start(){\n            running = true\n            lastframe = performance.now()\n            polyfillAnimFrame(frame)\n        },\n        setPreDrawCallback: function(f){\n            preDrawCallback = f\n        },\n        stop: function stop(){ running = false },\n        addsmoke: addParticles,\n        addSmoke: addParticles,\n    }\n}\n\n\n\n/* Magic UMD Boilerplate Ending */\n/**/ }))\n","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'HashIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-hash\"\n    }, ctx.data]), [h(\"line\", {\n      attrs: {\n        x1: \"4\",\n        y1: \"9\",\n        x2: \"20\",\n        y2: \"9\"\n      }\n    }), h(\"line\", {\n      attrs: {\n        x1: \"4\",\n        y1: \"15\",\n        x2: \"20\",\n        y2: \"15\"\n      }\n    }), h(\"line\", {\n      attrs: {\n        x1: \"10\",\n        y1: \"3\",\n        x2: \"8\",\n        y2: \"21\"\n      }\n    }), h(\"line\", {\n      attrs: {\n        x1: \"16\",\n        y1: \"3\",\n        x2: \"14\",\n        y2: \"21\"\n      }\n    })]);\n  }\n};","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'ImageIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-image\"\n    }, ctx.data]), [h(\"rect\", {\n      attrs: {\n        x: \"3\",\n        y: \"3\",\n        width: \"18\",\n        height: \"18\",\n        rx: \"2\",\n        ry: \"2\"\n      }\n    }), h(\"circle\", {\n      attrs: {\n        cx: \"8.5\",\n        cy: \"8.5\",\n        r: \"1.5\"\n      }\n    }), h(\"polyline\", {\n      attrs: {\n        points: \"21 15 16 10 5 21\"\n      }\n    })]);\n  }\n};","import _mergeJSXProps from \"babel-helper-vue-jsx-merge-props\";\nexport default {\n  name: 'DropletIcon',\n  functional: true,\n  render: function render(h, ctx) {\n    return h(\"svg\", _mergeJSXProps([{\n      attrs: {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"24\",\n        height: \"24\",\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        stroke: \"currentColor\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      },\n      \"class\": \"feather feather-droplet\"\n    }, ctx.data]), [h(\"path\", {\n      attrs: {\n        d: \"M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z\"\n      }\n    })]);\n  }\n};","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n"],"sourceRoot":""}